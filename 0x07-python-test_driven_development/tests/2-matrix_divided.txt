import unittest
from matrix_divided import matrix_divided

class TestMatrixDivided(unittest.TestCase):
    def test_matrix_divided(self):
        # Test with valid input
        matrix = [[1, 2, 3], [4, 5, 6]]
        div = 2
        result = matrix_divided(matrix, div)
        self.assertEqual(result, [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]])

        # Test with invalid matrix input (not a list of lists)
        matrix = [1, 2, 3]
        div = 2
        self.assertRaises(TypeError, matrix_divided, matrix, div)

        # Test with invalid matrix input (different row sizes)
        matrix = [[1, 2], [4, 5, 6]]
        div = 2
        self.assertRaises(TypeError, matrix_divided, matrix, div)

        # Test with invalid div input (not a number)
        matrix = [[1, 2, 3], [4, 5, 6]]
        div = "2"
        self.assertRaises(TypeError, matrix_divided, matrix, div)

        # Test with invalid div input (zero)
        matrix = [[1, 2, 3], [4, 5, 6]]
        div = 0
        self.assertRaises(ZeroDivisionError, matrix_divided, matrix, div)


if __name__ == '__main__':
    unittest.main()
